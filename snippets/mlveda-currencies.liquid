{% if settings.show_multiple_currencies %}

<script>
  /*
 * Cookie plugin
 *
 * Copyright (c) 2006 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */

jQuery.cookie=function(b,j,m){if(typeof j!="undefined"){m=m||{};if(j===null){j="";m.expires=-1}var e="";if(m.expires&&(typeof m.expires=="number"||m.expires.toUTCString)){var f;if(typeof m.expires=="number"){f=new Date();f.setTime(f.getTime()+(m.expires*24*60*60*1000))}else{f=m.expires}e="; expires="+f.toUTCString()}var l=m.path?"; path="+(m.path):"";var g=m.domain?"; domain="+(m.domain):"";var a=m.secure?"; secure":"";document.cookie=[b,"=",encodeURIComponent(j),e,l,g,a].join("")}else{var d=null;if(document.cookie&&document.cookie!=""){var k=document.cookie.split(";");for(var h=0;h<k.length;h++){var c=jQuery.trim(k[h]);if(c.substring(0,b.length+1)==(b+"=")){d=decodeURIComponent(c.substring(b.length+1));break}}}return d}};

</script>

{{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}

<script>
function mlvedaCreateCookie(name, value, days) {
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        var expires = "; expires=" + date.toGMTString();
    }
    else
        var expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
}

function mlvedaReadCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ')
            c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0)
            return c.substring(nameEQ.length, c.length);
    }
    return null;
}

function mlvedaEraseCookie(name) {
    createCookie(name, "", -1);
}

function roundCurrency() {
  
  {% if settings.show_decimal_places %}
    {% if settings.hide_decimal_places %}
  		
    {% else %}
      $('.money').each(function(){
        if (Currency.currentCurrency === "JOD" || Currency.currentCurrency === "KWD" || Currency.currentCurrency === "BHD") {
          var moneyraw = parseFloat(jQuery(this).html().replace(/[^0-9]/g, ""), 10) / 10 ;
        } 
        else if( Currency.currentCurrency === "KRW" || Currency.currentCurrency === "JPY" || Currency.currentCurrency === "SEK" || Currency.currentCurrency === "HUF" || Currency.currentCurrency === "ISK") {
          var moneyraw = parseFloat(jQuery(this).html().replace(/[^0-9]/g, ""), 10) * 100 ;
        } else {
          var moneyraw = parseFloat(jQuery(this).html().replace(/[^0-9]/g, ""), 10);
        }  
        var moneyrounded = Math.round(moneyraw / 100) * 100;
        if(Currency.format === "money_with_currency_format") {
          var acuree = Currency.formatMoney(moneyrounded, Currency.moneyFormats[Currency.currentCurrency].money_with_currency_format)
        }
        else {
          var acuree = Currency.formatMoney(moneyrounded, Currency.moneyFormats[Currency.currentCurrency].money_format)
        }       
        console.log("------------------------------"+moneyraw+" - " + moneyrounded + " - " + acuree + " - " + Currency.format);
        jQuery(this).html(acuree);
      });
    {% endif %}
  {% endif %}
}

{% if settings.hide_decimal_places %}
  var firstTimeSwitchFlag=0;
{% endif %}

function mlvedaload(){

{% if settings.currency_format %}
Currency.format = '{{ settings.currency_format }}';
{% endif %}

var shopCurrency = '{{ shop.currency }}';

/* Sometimes merchants change their shop currency, let's tell our JavaScript file */
Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};
  
{% if settings.hide_decimal_places %}
if(firstTimeSwitchFlag==0) {
  var local_supported_currencies = window.supported_currencies.split(" ");
  for(var i=0; i<local_supported_currencies.length; i++)
  {
    if(local_supported_currencies[i] !== shopCurrency && local_supported_currencies[i] !== "JOD" && local_supported_currencies[i] !== "KWD" && local_supported_currencies[i] !== "BHD" && local_supported_currencies[i] !== "JPY" ) {
      if(Currency.moneyFormats[local_supported_currencies[i]] && Currency.moneyFormats[local_supported_currencies[i]].money_with_currency_format.indexOf("amount_no_decimals") == -1) {
        Currency.moneyFormats[local_supported_currencies[i]].money_with_currency_format = Currency.moneyFormats[local_supported_currencies[i]].money_with_currency_format.replace("amount","amount_no_decimals");
        Currency.moneyFormats[local_supported_currencies[i]].money_format = Currency.moneyFormats[local_supported_currencies[i]].money_format.replace("amount","amount_no_decimals");
      }
    }
  }
  firstTimeSwitchFlag=1;
}
{% endif %}

/* Default currency */
var defaultCurrency = shopCurrency;
  
/* Cookie currency */
var cookieCurrency = Currency.cookie.read();
var resetCurrencyCookie = mlvedaReadCookie("resetCurrencyCookie");
if (resetCurrencyCookie == null)
{
    cookieCurrency = null;
    mlvedaCreateCookie("resetCurrencyCookie", 1, 365);
}

  if(cookieCurrency == null) {
    cookieCurrency = window.mlvedadefaultcurrency;
  }
/* Fix for customer account pages */
jQuery('span.money span.money').each(function() {
  jQuery(this).parents('span.money').removeClass('money');
});

/* Saving the current price */
jQuery('span.money').each(function() {
if(!jQuery(this).attr('data-currency-{{ shop.currency }}'))
{
  jQuery(this).attr('data-currency-{{ shop.currency }}', jQuery(this).html());
}
});

// If there's no cookie.
if (cookieCurrency == null) {
  if (shopCurrency !== defaultCurrency) {
    Currency.convertAll(shopCurrency, defaultCurrency);
  }
  else {
    Currency.currentCurrency = defaultCurrency;
  }
}
// If the cookie value does not correspond to any value in the currency dropdown.
else if (jQuery('[name=currencies]').size() && jQuery('[name=currencies] option[value=' + cookieCurrency + ']').size() === 0) {
  Currency.currentCurrency = shopCurrency;
  Currency.cookie.write(shopCurrency);
}
else if (cookieCurrency === shopCurrency) {
  Currency.currentCurrency = shopCurrency;
}
else {
  Currency.convertAll(shopCurrency, cookieCurrency);
  jQuery(".mlvedaCartNote").css("display","inline");
  roundCurrency();
}
  

jQuery('[name=currencies]').val(Currency.currentCurrency).change(function() {
  var newCurrency = jQuery(this).val();
  Currency.convertAll(Currency.currentCurrency, newCurrency);
  jQuery('.selected-currency').text(Currency.currentCurrency);
  if(newCurrency != shopCurrency) {
    roundCurrency();
    jQuery(".mlvedaCartNote").css("display","inline");
  } else {
    jQuery(".mlvedaCartNote").css("display","none");
  }});

var original_selectCallback = window.selectCallback;
var selectCallback = function(variant, selector) {
  original_selectCallback(variant, selector);
  Currency.convertAll(shopCurrency, jQuery('[name=currencies]').val());
  jQuery('.selected-currency').text(Currency.currentCurrency);
};

jQuery('.selected-currency').text(Currency.currentCurrency);

jQuery('.single-option-selector').change(function() {
    mlvedaload();
  });


  
$(document).ajaxComplete(function(event, xhr, settings) {  
  if(settings.url.indexOf("cart.js")!=-1) {
       setTimeout(function() {
         mlvedaload();
         
       }, 1000);
     }    
      roundCurrency();
   });
  jQuery("#currencies11").niceSelect();
   jQuery("#currencies110").niceSelect();
}
                          
function currenciesCallbackSpecial(id){
  jQuery('body').ajaxComplete();
}                    
</script>

{% endif %}